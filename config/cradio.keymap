/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <285>;
};

/ {
    combos {
        compatible = "zmk,combos";

        bluetoothctl {
            bindings = <&mo 5>;
            key-positions = <31 30>;
        };

        baselyr {
            bindings = <&tog 0>;
            key-positions = <32 33>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        megac {
            bindings = <&kp LC(LS(C))>;
            key-positions = <21 22>;
        };

        megav {
            bindings = <&kp LS(LC(V))>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q               &kp W             &kp E           &kp R           &kp T        &kp Y          &kp U           &kp I           &kp O             &kp P
&mt LEFT_CONTROL A  &mt LEFT_SHIFT S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G        &kp H          &mt LEFT_GUI J  &mt LEFT_ALT K  &mt LEFT_SHIFT L  &mt LEFT_CONTROL SINGLE_QUOTE
&kp Z               &kp X             &kp C           &kp V           &kp B        &kp N          &kp M           &kp COMMA       &kp DOT           &kp SLASH
                                                      &lt 2 RETURN    &kp SPACE    &kp BACKSPACE  &lt 1 DELETE
            >;
        };

        sym {
            bindings = <
&kp ESCAPE  &kp TILDE  &kp LBRC       &kp RBRC   &kp GRAVE      &kp SEMICOLON  &kp LBKT        &kp RBKT   &kp LPAR      &kp RPAR
&kp EXCL    &kp AT     &kp HASH       &kp DLLR   &kp PERCENT    &kp MINUS      &sk LEFT_SHIFT  &sk LALT   &sk LEFT_GUI  &sk LEFT_CONTROL
&kp CARET   &kp AMPS   &kp BACKSLASH  &kp SLASH  &kp PIPE       &kp EQUAL      &kp PLUS        &kp ASTRK  &kp QUESTION  &kp TILDE
                                      &mo 3      &kp SPACE      &kp BACKSPACE  &trans
            >;
        };

        arrowfun {
            bindings = <
&kp ESCAPE        &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP     &kp C_BRI_INC       &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END    &kp DELETE
&sk LEFT_CONTROL  &sk LEFT_GUI  &sk LALT           &sk LEFT_SHIFT      &kp C_BRI_DEC       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp ENTER
&kp CAPSLOCK      &kp C_STOP    &kp C_REWIND       &kp C_FAST_FORWARD  &kp C_PLAY_PAUSE    &kp TAB         &kp ESCAPE      &tog 4        &tog 4     &tog 0
                                                   &trans              &kp SPACE           &kp BACKSPACE   &mo 3
            >;
        };

        numbers {
            bindings = <
&kp N1            &kp N2        &kp N3    &kp N4          &kp N5       &kp N6         &kp N7          &kp N8    &kp N9        &kp N0
&sk LEFT_CONTROL  &sk LEFT_GUI  &sk LALT  &sk LEFT_SHIFT  &kp F11      &kp F12        &sk LEFT_SHIFT  &sk LALT  &sk LEFT_GUI  &sk LEFT_CONTROL
&kp F1            &kp F2        &kp F3    &kp F4          &kp F5       &kp F6         &kp F7          &kp F8    &kp F9        &kp F10
                                          &trans          &kp SPACE    &kp BACKSPACE  &trans
            >;
        };

        gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &mt R T      &kp Y   &kp U   &kp I      &kp O    &kp P
&kp LSHFT  &kp A  &kp S  &kp D         &mt F G      &kp H   &kp J   &kp K      &kp L    &kp SINGLE_QUOTE
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V        &kp N   &kp M   &kp COMMA  &kp DOT  &kp SLASH
                         &kp LEFT_ALT  &kp SPACE    &tog 0  &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &bt BT_SEL 2    &trans        &trans  &trans  &trans  &trans
                        &trans      &trans          &trans        &trans
            >;
        };
    };
};
